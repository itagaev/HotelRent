{"version":3,"sources":["store.ts","header.tsx","Search/SearchBar/SearchForm/SearchForm.style.tsx","Search/SearchBar/SearchForm/SearchForm.tsx","Search/SearchBar/SearchBar.tsx","Search/Search.tsx","App.tsx","index.tsx","Hotels/HotelItem/index.ts","Hotels/HotelItem/DescItem/DescItem.tsx","Hotels/HotelItem/HotelOption/HotelOption.tsx","Hotels/HotelItem/HotelItem.style.ts","Hotels/HotelItem/HotelItem.tsx","hotels.mock.ts","Hotels/Hotels.style.ts","Hotels/Hotels.tsx","Hotels/index.ts"],"names":["configure","enforceActions","StoreModel","selectedHotelsListView","loadingHotels","city","hotels","date_from","Date","peopleCnt","dayCnt","item","value","this","decorate","observable","set","action","Store","useHeaderStyles","makeStyles","theme","appBar","backgroundColor","title","marginLeft","spacing","Header","classes","AppBar","className","position","Toolbar","Typography","variant","useSearchFormStyles","root","marginTop","input","width","date","peopleNumber","button","SearchBarForm","observer","React","inputText","setInputText","selectedDate","setSelectedDate","setPeopleNumber","rentDays","setRentDays","Grid","FormControl","InputLabel","htmlFor","Input","id","startAdornment","InputAdornment","HotelOutlined","onChange","e","currentTarget","disableToolbar","format","label","TextField","type","InputLabelProps","shrink","isNaN","Button","color","onClick","setTimeout","useSearchBarStyles","padding","SearchBar","display","gutterBottom","useSearchSectionStlyes","container","flexGrow","height","SearchSection","Container","App","utils","DateFnsUtils","Hotels","ReactDOM","render","document","getElementById","DescItem","keyItem","HotelOption","options","optionText","optionTextColor","useHotelItemStyles","image","margin","favIcon","cursor","HotelItem","hotel","handleChangeFav","triggeredHotelIndex","findIndex","triggeredHotel","favorite","Paper","xs","ButtonBase","src","imgLink","alt","name","Rating","stars","readOnly","size","Chip","rating","desc","maxPlace","contacts","advList","advantages","reduce","prev","cur","index","charAt","toUpperCase","slice","disadvList","disadvantages","length","renderHotelOptions","price","unitPrice","calcPrice","hasPlace","1","2","3","4","useHotelsSectionStyles","spinner","HotelsSection","filteredHotels","filter","toLowerCase","startsWith","CircularProgress","Tabs","newTab","indicatorColor","textColor","centered","Tab","map","key"],"mappings":"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","file":"static/js/main.9ebf58d9.chunk.js","sourcesContent":["import { observable, configure, action, decorate } from \"mobx\";\r\nimport { HotelItemShape } from \"./Hotels\";\r\n\r\nconfigure({ enforceActions: \"observed\" });\r\n\r\ninterface IStoreModel {\r\n  selectedHotelsListView: \"all\" | \"favorites\";\r\n  loadingHotels: boolean;\r\n  hotels: HotelItemShape[];\r\n  city: string;\r\n  peopleCnt: number;\r\n  dayCnt: number;\r\n  date_from: Date | null;\r\n}\r\n\r\nclass StoreModel implements IStoreModel {\r\n  selectedHotelsListView: \"all\" | \"favorites\" = \"all\";\r\n  loadingHotels = false;\r\n  city = \"\";\r\n  hotels: HotelItemShape[] = [];\r\n  date_from: Date | null = new Date();\r\n  peopleCnt = 1;\r\n  dayCnt = 1;\r\n\r\n  set<U extends keyof IStoreModel>(item: U, value: this[U]) {\r\n    this[item] = value;\r\n  }\r\n}\r\n\r\ndecorate(StoreModel, {\r\n  selectedHotelsListView: observable,\r\n  loadingHotels: observable,\r\n  city: observable,\r\n  date_from: observable,\r\n  peopleCnt: observable,\r\n  dayCnt: observable,\r\n  hotels: observable,\r\n\r\n  set: action,\r\n});\r\n\r\nexport const Store = new StoreModel();\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nconst useHeaderStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: \"#003580\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport const Header: React.FC = () => {\r\n  const classes = useHeaderStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          HotelRent\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useSearchFormStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    width: \"25%\",\r\n  },\r\n  date: {\r\n    marginLeft: 10,\r\n    width: \"13%\",\r\n  },\r\n  peopleNumber: {\r\n    marginLeft: 10,\r\n    width: \"14%\",\r\n  },\r\n  button: {\r\n    marginTop: 5,\r\n    marginLeft: 10,\r\n  },\r\n}));\r\n","import { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  InputAdornment,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  TextFieldProps,\r\n} from \"@material-ui/core\";\r\nimport { HotelOutlined } from \"@material-ui/icons\";\r\n\r\nimport { Store } from \"../../../store\";\r\n\r\nimport { useSearchFormStyles } from \"./SearchForm.style\";\r\n\r\nexport const SearchBarForm: React.FC = observer(() => {\r\n  const [inputText, setInputText] = React.useState(\"\");\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date()\r\n  );\r\n  const [peopleNumber, setPeopleNumber] = React.useState(1);\r\n  const [rentDays, setRentDays] = React.useState(1);\r\n\r\n  const classes = useSearchFormStyles();\r\n\r\n  const handlePeopleNumberChanged: TextFieldProps[\"onChange\"] = (e) => {\r\n    const { value } = e.currentTarget;\r\n    if (+value <= 0) {\r\n      setPeopleNumber(1);\r\n    } else if (+value > 4) {\r\n      setPeopleNumber(4);\r\n    } else {\r\n      setPeopleNumber(+value);\r\n    }\r\n  };\r\n\r\n  const handleSearchSubmit = () => {\r\n    Store.set(\"loadingHotels\", true);\r\n\r\n    setTimeout(() => {\r\n      Store.set(\"city\", inputText);\r\n      Store.set(\"date_from\", selectedDate);\r\n      Store.set(\"peopleCnt\", peopleNumber);\r\n      Store.set(\"dayCnt\", rentDays);\r\n      Store.set(\"loadingHotels\", false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid>\r\n        <FormControl className={classes.input}>\r\n          <InputLabel htmlFor=\"input\">Куда вы хотите поехать?</InputLabel>\r\n          <Input\r\n            id=\"input\"\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <HotelOutlined />\r\n              </InputAdornment>\r\n            }\r\n            value={inputText}\r\n            onChange={(e) => {\r\n              setInputText(e.currentTarget.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <KeyboardDatePicker\r\n          className={classes.date}\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          label=\"День заселения\"\r\n          value={selectedDate}\r\n          onChange={(date) => setSelectedDate(date)}\r\n        />\r\n        <TextField\r\n          className={classes.peopleNumber}\r\n          label=\"Количество людей\"\r\n          type=\"number\"\r\n          value={peopleNumber}\r\n          onChange={handlePeopleNumberChanged}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          className={classes.peopleNumber}\r\n          label=\"Количество дней\"\r\n          value={rentDays}\r\n          onChange={(e) => {\r\n            if (isNaN(+e.currentTarget.value)) setRentDays(0);\r\n            else setRentDays(+e.currentTarget.value);\r\n          }}\r\n        />\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleSearchSubmit}\r\n        >\r\n          Поиск\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nimport { SearchBarForm } from \"./SearchForm/SearchForm\";\r\n\r\nexport const useSearchBarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"3.5% 0% 9.5% 0%\",\r\n  },\r\n}));\r\n\r\nexport const SearchBar: React.FC = observer(() => {\r\n  const classes = useSearchBarStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h5\" display=\"block\">\r\n        Найдите спецпредложения для отелей и домов\r\n      </Typography>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n        От уютных загородных домов до стильных городских квартир\r\n      </Typography>\r\n      <SearchBarForm />\r\n    </div>\r\n  );\r\n});\r\n","import * as React from \"react\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { SearchBar } from \"./SearchBar\";\r\n\r\nconst useSearchSectionStlyes = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#f7f7f7\",\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    width: \"75%\",\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport const SearchSection: React.FC = () => {\r\n  const classes = useSearchSectionStlyes();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container className={classes.container}>\r\n        <SearchBar />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport { Header } from \"./header\";\nimport { SearchSection } from \"./Search\";\nimport { HotelsSection } from \"./Hotels\";\n\nexport const App: React.FC = () => (\n  <>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Header />\n      <SearchSection />\n      <HotelsSection />\n    </MuiPickersUtilsProvider>\n  </>\n);\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export * from \"./HotelItem\";\r\nexport * from \"./HotelItem.types\";\r\n","import * as React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport interface DescItemProps {\r\n  keyItem: string;\r\n  value: string;\r\n}\r\n\r\nexport const DescItem: React.FC<DescItemProps> = ({ keyItem, value }) => {\r\n  return (\r\n    <>\r\n      <Typography color=\"primary\" display=\"inline\">\r\n        {keyItem}:{\" \"}\r\n      </Typography>\r\n      <Typography variant=\"body2\" display=\"inline\">\r\n        {value}\r\n      </Typography>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Typography, TypographyProps } from \"@material-ui/core\";\r\n\r\ninterface HotelOptionProps {\r\n  options: string;\r\n  optionText: string;\r\n  optionTextColor: TypographyProps[\"color\"];\r\n}\r\n\r\nexport const HotelOption: React.FC<HotelOptionProps> = ({\r\n  options,\r\n  optionText,\r\n  optionTextColor,\r\n}) => (\r\n  <>\r\n    <Typography color=\"primary\" display=\"inline\">\r\n      {optionText}:{\" \"}\r\n    </Typography>\r\n    <Typography variant=\"body2\" display=\"inline\" color={optionTextColor}>\r\n      {options}\r\n    </Typography>\r\n    <br />\r\n  </>\r\n);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useHotelItemStyles = makeStyles(() => ({\r\n  image: {\r\n    margin: \"auto\",\r\n  },\r\n  favIcon: {\r\n    cursor: \"pointer\",\r\n  },\r\n  root: {\r\n    height: \"100%\",\r\n    padding: 10,\r\n  },\r\n}));\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { action } from \"mobx\";\r\nimport { Grid, Paper, ButtonBase, Typography, Chip } from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\nimport { HotelItemShape } from \"./HotelItem.types\";\r\nimport { DescItem } from \"./DescItem\";\r\nimport { HotelOption } from \"./HotelOption\";\r\n\r\nimport { useHotelItemStyles } from \"./HotelItem.style\";\r\n\r\nimport { Store } from \"../../store\";\r\n\r\nexport interface HotelItemProps {\r\n  hotel: HotelItemShape;\r\n}\r\n\r\nexport const HotelItem: React.FC<HotelItemProps> = observer(({ hotel }) => {\r\n  const classes = useHotelItemStyles();\r\n\r\n  const calcPrice = (price: HotelItemShape[\"price\"]) => {\r\n    const unitPrice = price[Store.peopleCnt];\r\n    return Store.dayCnt * unitPrice;\r\n  };\r\n\r\n  const renderHotelOptions = () => {\r\n    const advList = hotel.advantages.reduce((prev, cur, index) => {\r\n      if (index === 0) return prev.charAt(0).toUpperCase() + prev.slice(1);\r\n      return prev + \", \" + cur;\r\n    }, hotel.advantages[0]);\r\n\r\n    const disadvList = hotel.disadvantages.reduce((prev, cur, index) => {\r\n      if (index === 0) return prev.charAt(0).toUpperCase() + prev.slice(1);\r\n      return prev + \", \" + cur;\r\n    }, hotel.disadvantages[0]);\r\n\r\n    return (\r\n      <>\r\n        {hotel.advantages.length === 0 ? null : (\r\n          <HotelOption\r\n            options={advList}\r\n            optionTextColor=\"inherit\"\r\n            optionText=\"Плюсы\"\r\n          />\r\n        )}\r\n        {hotel.disadvantages.length === 0 ? null : (\r\n          <HotelOption\r\n            options={disadvList}\r\n            optionTextColor=\"error\"\r\n            optionText=\"Минусы\"\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleChangeFav = action((id: number) => {\r\n    const [...hotels] = Store.hotels;\r\n    const triggeredHotelIndex = hotels.findIndex((hotel) => hotel.id === id);\r\n    const triggeredHotel = hotels[triggeredHotelIndex];\r\n\r\n    hotels[triggeredHotelIndex] = {\r\n      ...triggeredHotel,\r\n      favorite: !triggeredHotel.favorite,\r\n    };\r\n\r\n    Store.set(\"hotels\", hotels);\r\n  });\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={4} className={classes.image}>\r\n          <ButtonBase>\r\n            <img src={hotel.imgLink} alt=\"Hotel pic\" />\r\n          </ButtonBase>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <div>\r\n            <Typography color=\"primary\" variant=\"h6\" display=\"inline\">\r\n              {hotel.name}, {hotel.city}\r\n            </Typography>\r\n            <Rating value={hotel.stars} readOnly size=\"small\" />\r\n            {hotel.favorite ? (\r\n              <FavoriteIcon\r\n                className={classes.favIcon}\r\n                onClick={() => handleChangeFav(hotel.id)}\r\n              />\r\n            ) : (\r\n              <FavoriteBorderIcon\r\n                className={classes.favIcon}\r\n                onClick={() => handleChangeFav(hotel.id)}\r\n              />\r\n            )}\r\n          </div>\r\n          <Typography color=\"primary\" display=\"inline\">\r\n            Рейтинг:{\" \"}\r\n          </Typography>\r\n          <Chip color=\"primary\" size=\"small\" label={hotel.rating} />\r\n          <br />\r\n\r\n          <DescItem keyItem=\"Описание\" value={hotel.desc} />\r\n          <DescItem\r\n            keyItem=\"Количество мест\"\r\n            value={`От 1 до ${hotel.maxPlace}`}\r\n          />\r\n          <DescItem keyItem=\"Контакты\" value={hotel.contacts} />\r\n          {renderHotelOptions()}\r\n          <Typography color=\"primary\" display=\"inline\">\r\n            Цена на {Store.dayCnt} дней/день:{\" \"}\r\n          </Typography>\r\n          <Chip color=\"primary\" size=\"small\" label={calcPrice(hotel.price)} />\r\n          <br />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n});\r\n","import { HotelItemShape } from \"./Hotels\";\r\n\r\nexport const hotels: HotelItemShape[] = [\r\n  {\r\n    id: 1,\r\n    city: \"Алматы\",\r\n    name: \"Казахстан\",\r\n    stars: 4,\r\n    desc: \"Гостиница в центре города с отличным видом на горы! 850м от цетра\",\r\n    rating: 8.9,\r\n    maxPlace: 4,\r\n    hasPlace: true,\r\n    price: {\r\n      1: 15000,\r\n      2: 20000,\r\n      3: 35000,\r\n      4: 60000,\r\n    },\r\n    advantages: [\"бесплатный завтрак\", \"онлайн-оплата\"],\r\n    disadvantages: [\"предоплата\"],\r\n    favorite: false,\r\n    imgLink:\r\n      \"https://r-cf.bstatic.com/xdata/images/hotel/square220/16723416.webp?k=10a4c7adfe60342b3e5a91e75a59290b1f0f62fb5cec350b3c83865776359c86&o=\",\r\n    contacts: \"+7-747-909-7212\",\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Алматы\",\r\n    name: \"Отель Алматы\",\r\n    stars: 3,\r\n    desc:\r\n      \"Гостиница «Алматы» расположена в центре города Алматы. К услугам гостей ресторан, сауна и массажный кабинет. Стойка регистрации работает круглосуточно. Предоставляется бесплатный Wi-Fi.\",\r\n    rating: 8.5,\r\n    maxPlace: 3,\r\n    hasPlace: true,\r\n    price: {\r\n      1: 10000,\r\n      2: 15000,\r\n      3: 25000,\r\n    },\r\n    advantages: [\"онлайн-оплата\"],\r\n    disadvantages: [],\r\n    favorite: false,\r\n    imgLink:\r\n      \"https://r-cf.bstatic.com/xdata/images/hotel/square220/153056764.webp?k=87573493ae417164c2b23cbcad17604a23e9e5c9d0cd034c9aba6f99a4650493&o=\",\r\n    contacts: \"+7-747-853-8636\",\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Нур-Султан\",\r\n    name: \"Gokai Hotel\",\r\n    stars: 3,\r\n    desc:\r\n      \"Отель Gokai расположен в районе Нур-Султан, в 5 км от монумента Байтерек. К услугам гостей бар, бесплатная частная парковка и общий лаундж.\",\r\n    rating: 8.7,\r\n    maxPlace: 2,\r\n    hasPlace: true,\r\n    price: {\r\n      1: 10000,\r\n      2: 15000,\r\n    },\r\n    advantages: [],\r\n    disadvantages: [],\r\n    favorite: false,\r\n    imgLink:\r\n      \"https://q-cf.bstatic.com/xdata/images/hotel/square220/211331834.webp?k=7735c228aee3618d2107b58211f267bf71236626a6b9db1f29463fe4d5d48401&o=\",\r\n    contacts: \"+7-747-853-8636\",\r\n  },\r\n];\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useHotelsSectionStyles = makeStyles(() => ({\r\n  root: {\r\n    marginTop: 20,\r\n  },\r\n  spinner: {\r\n    marginLeft: \"50%\",\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    marginTop: 10,\r\n    width: \"50%\",\r\n    height: 280,\r\n  },\r\n}));\r\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, Tabs, Tab, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport { hotels } from \"../hotels.mock\";\r\nimport { Store } from \"../store\";\r\nimport { HotelItem } from \"./HotelItem\";\r\n\r\nimport { useHotelsSectionStyles } from \"./Hotels.style\";\r\n\r\nexport const HotelsSection: React.FC = observer(() => {\r\n  const classes = useHotelsSectionStyles();\r\n\r\n  React.useEffect(() => {\r\n    Store.set(\"loadingHotels\", true);\r\n\r\n    setTimeout(() => {\r\n      Store.set(\"hotels\", hotels);\r\n      Store.set(\"loadingHotels\", false);\r\n    }, 2500);\r\n  }, []);\r\n\r\n  const filteredHotels =\r\n    Store.selectedHotelsListView === \"all\"\r\n      ? Store.hotels.filter(\r\n          (hotel) =>\r\n            hotel.city.toLowerCase().startsWith(Store.city.toLowerCase()) &&\r\n            hotel.hasPlace &&\r\n            hotel.maxPlace >= Store.peopleCnt\r\n        )\r\n      : Store.hotels.filter((hotel) => hotel.favorite);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {Store.loadingHotels ? (\r\n        <Container className={classes.container}>\r\n          <CircularProgress className={classes.spinner} />\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          <Tabs\r\n            value={Store.selectedHotelsListView}\r\n            onChange={(e, newTab) =>\r\n              Store.set(\"selectedHotelsListView\", newTab)\r\n            }\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Все\" value=\"all\" />\r\n            <Tab label=\"Избранное\" value=\"favorites\" />\r\n          </Tabs>\r\n          {filteredHotels.map((hotel) => (\r\n            <Container key={hotel.id} className={classes.container}>\r\n              <HotelItem hotel={hotel} />\r\n            </Container>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","export * from \"./Hotels\";\r\nexport * from \"./HotelItem\";\r\n"],"sourceRoot":""}